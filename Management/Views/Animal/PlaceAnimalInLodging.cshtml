@model AnimalViewModel

@{ ViewData["Title"] = "Place animal in lodging"; }

<h1>Place this animal in a lodge</h1>

<h4>@Model.Animal.Name</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="PlaceAnimalInLodging">
            <p style="color: red; font-size: 16px;">@ViewBag.Message</p>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Animal.ID" />
            <input type="hidden" asp-for="AnimalType" />
            @if (Model.Animal.LodgingID != null)
            {
                <div class="form-group">
                    <label class="control-label">Current location:</label>
                    <p>@Model.AllLodgings.FirstOrDefault(m => m.ID == Model.Animal.LodgingID).Description</p>
                </div>
            }
            <div class="form-group">
                <label class="control-label">Available locations</label>
                @if (Model.AvailableLodgings.Count > 0)
                {
                    <select asp-for="Lodging.ID" class="form-control">
                        <option value=""></option>
                        @foreach (var lodge in Model.AvailableLodgings)
                        {
                            <option value="@lodge.ID">@lodge.Description</option>
                        }
                    </select>
                }
                else
                {
                    <p>No available lodgings.</p>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}